@file:Suppress("unused")

package com.gmail.gcolaianni5.jris

import kotlin.reflect.KClass

/**
 * The Javadoc comments are copied from https://en.wikipedia.org/wiki/RIS_(file_format)
 */
enum class RisTag(
        val description: String,
        internal val kClass: KClass<*> = String::class,
        val maxLength: Int? = null,
        internal val fixOrder: Int? = null,
        internal val empty: Boolean = false
) {
    TY("Type of reference", kClass = RisType::class, fixOrder = 0),
    A1("First Author"),
    A2("Secondary Author", kClass = List::class),
    A3("Tertiary Author", kClass = List::class),
    A4("Subsidiary Author", kClass = List::class),
    AB("Abstract"),
    AD("Author Address"),
    AN("Accession Number"),
    AU("Author", kClass = List::class),
    AV("Location in Archives"),
    BT("This field maps to T2 for all reference types except for Whole Book and Unpublished Work references."), // This field maps to T2 for all reference types except for Whole Book and Unpublished Work references.
    C1("Custom 1"),
    C2("Custom 2"),
    C3("Custom 3"),
    C4("Custom 4"),
    C5("Custom 5"),
    C6("Custom 6"),
    C7("Custom 7"),
    C8("Custom 8"),
    CA("Caption"),
    CN("Call Number"),
    CP("This field can contain alphanumeric characters."),
    CT("Title of unpublished reference"),
    CY("Place Published"),
    DA("Date"),
    DB("Name of Database"),
    DO("DOI"),
    DP("Database Provider"),
    ED("Editor"),
    EP("End Page", kClass = Int::class),
    ET("Edition"),
    ID("Reference ID"),
    IS("Issue number"),
    J1("Periodical name: user abbreviation 1.", maxLength = 255),
    J2("Alternate Title"), // (this field is used for the abbreviated title of a book or journal name, the latter mapped to T2)
    JA("Periodical name: standard abbreviation.", maxLength = 255), //  This is the periodical in which the article was (or is to be, in the case of in-press references) published.
    JF("Journal/Periodical name: full format.", maxLength = 255),
    JO("Journal/Periodical name: full format.", maxLength = 255),
    KW("Keywords", kClass = List::class),
    L1("Link to PDF.", kClass = List::class), // URL addresses can be entered individually, one per tag or multiple addresses can be entered on one line using a semi-colon as a separator.
    L2("Link to Full-text.", kClass = List::class), // URL addresses can be entered individually, one per tag or multiple addresses can be entered on one line using a semi-colon as a separator.
    L3("Related Records.", kClass = List::class),
    L4("Image(s).", kClass = List::class),
    LA("Language"),
    LB("Label"),
    LK("Website Link"),
    M1("Number", kClass = Long::class),
    M2("Miscellaneous 2."),
    M3("Type of Work"),
    N1("Notes"),
    N2("Abstract."), //  This is a free text field and can contain alphanumeric characters. There is no practical length limit to this field.
    NV("Number of Volumes"),
    OP("Original Publication"),
    PB("Publisher"),
    PP("Publishing Place"),
    PY("Publication year (YYYY)"),
    RI("Reviewed Item"),
    RN("Research Notes"),
    RP("Reprint Edition"),
    SE("Section"),
    SN("ISBN/ISSN"),
    SP("Start Page", kClass = Int::class),
    ST("Short Title"),
    T1("Primary Title"),
    T2("Secondary Title (journal title, if applicable)"),
    T3("Tertiary Title"),
    TA("Translated Author"),
    TI("Title"),
    TT("Translated Title"),
    U1("User definable 1."),
    U2("User definable 2."),
    U3("User definable 3."),
    U4("User definable 4."),
    U5("User definable 5."),
    UR("URL"),
    VL("Volume number"),
    VO("Published Standard number"),
    Y1("Primary Date"),
    Y2("Access Date"),
    ER("End of Reference", fixOrder = Integer.MAX_VALUE, empty = true) // must be empty and the last tag
}


enum class RisType(val description: String) {
    ABST("Abstract"),
    ADVS("Audiovisual material"),
    AGGR("Aggregated Database"),
    ANCIENT("Ancient Text"),
    ART("Art Work"),
    BILL("Bill"),
    BLOG("Blog"),
    BOOK("Whole book"),
    CASE("Case"),
    CHAP("Book chapter"),
    CHART("Chart"),
    CLSWK("Classical Work"),
    COMP("Computer program"),
    CONF("Conference proceeding"),
    CPAPER("Conference paper"),
    CTLG("Catalog"),
    DATA("Data file"),
    DBASE("Online Database"),
    DICT("Dictionary"),
    EBOOK("Electronic Book"),
    ECHAP("Electronic Book Section"),
    EDBOOK("Edited Book"),
    EJOUR("Electronic Article"),
    ELEC("Web Page"),
    ENCYC("Encyclopedia"),
    EQUA("Equation"),
    FIGURE("Figure"),
    GEN("Generic"),
    GOVDOC("Government Document"),
    GRANT("Grant"),
    HEAR("Hearing"),
    ICOMM("Internet Communication"),
    INPR("In Press"),
    JFULL("Journal (full)"),
    JOUR("Journal"),
    LEGAL("Legal Rule or Regulation"),
    MANSCPT("Manuscript"),
    MAP("Map"),
    MGZN("Magazine article"),
    MPCT("Motion picture"),
    MULTI("Online Multimedia"),
    MUSIC("Music score"),
    NEWS("Newspaper"),
    PAMP("Pamphlet"),
    PAT("Patent"),
    PCOMM("Personal communication"),
    RPRT("Report"),
    SER("Serial publication"),
    SLIDE("Slide"),
    SOUND("Sound recording"),
    STAND("Standard"),
    STAT("Statute"),
    THES("Thesis/Dissertation"),
    UNPB("Unpublished work"),
    VIDEO("Video recording")
}
